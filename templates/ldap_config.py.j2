import ldap
from django_auth_ldap.config import LDAPSearch, GroupOfNamesType

AUTH_LDAP_SERVER_URI = "{{ netbox_ldap_uri }}"
AUTH_LDAP_CONNECTION_OPTIONS = {ldap.OPT_REFERRALS: 0}
AUTH_LDAP_BIND_DN = "{{ netbox_ldap_service_dn }}"
AUTH_LDAP_BIND_PASSWORD = "{{ netbox_ldap_service_pass }}"
LDAP_IGNORE_CERT_ERRORS = {{ 'True' if netbox_ldap_ignore_cert_errors else 'False' }}

{% if netbox_ldap_user_dn_template is defined %}
AUTH_LDAP_USER_DN_TEMPLATE = "{{ netbox_ldap_user_dn_template }}"
{% else %}
AUTH_LDAP_USER_SEARCH = LDAPSearch("{{ netbox_ldap_user_base }}",
                                   ldap.SCOPE_SUBTREE,
                                   "{{ netbox_ldap_user_filter }}")
{% endif %}
AUTH_LDAP_USER_ATTR_MAP = {
{% for netbox_field, ldap_field in netbox_ldap_attr_map.iteritems() %}
    "{{ netbox_field }}": "{{ ldap_field }}",
{% endfor %}
}

AUTH_LDAP_GROUP_SEARCH = LDAPSearch("{{ netbox_ldap_group_base }}",
                                    ldap.SCOPE_SUBTREE,
                                    "{{ netbox_ldap_group_filter }}")
AUTH_LDAP_GROUP_TYPE = GroupOfNamesType()
{% if netbox_ldap_require_group %}
AUTH_LDAP_REQUIRE_GROUP = "{{ netbox_ldap_require_group }}"
{% endif %}
AUTH_LDAP_USER_FLAGS_BY_GROUP = {
{% for netbox_field, ldap_group in netbox_ldap_group_flags.iteritems() %}
    "{{ netbox_field }}": "{{ ldap_group }}",
{% endfor %}
}
AUTH_LDAP_FIND_GROUP_PERMS = {{ 'True' if netbox_ldap_find_group_perms else 'False' }}
AUTH_LDAP_CACHE_GROUPS = {{ 'True' if netbox_ldap_cache_groups else 'False' }}
AUTH_LDAP_GROUP_CACHE_TIMEOUT = {{ netbox_ldap_group_cache_timeout }}
